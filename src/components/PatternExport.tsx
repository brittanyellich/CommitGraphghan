import { Button, Card } from '@radix-ui/themes'
import { DownloadIcon, FileIcon } from "@radix-ui/react-icons"
import type { ContributionData, PatternConfig } from '../types'

interface PatternExportProps {
  data: ContributionData
  config: PatternConfig
}

const YARN_COLORS = {
  0: { name: 'Cream', hex: '#f8f9fa', description: 'Background color for days with no commits' },
  1: { name: 'Light Green', hex: '#c6e48b', description: '1-3 commits' },
  2: { name: 'Medium Green', hex: '#7bc96f', description: '4-6 commits' },
  3: { name: 'Dark Green', hex: '#239a3b', description: '7-9 commits' },
  4: { name: 'Forest Green', hex: '#196127', description: '10+ commits' }
}

export function PatternExport({ data, config }: PatternExportProps) {
  const PATTERN_WIDTH = 106 // Fixed width for all years
  const PATTERN_HEIGHT = 14 // Fixed height per year
  const BORDER_WIDTH = 2 // 2 squares wide borders
  const totalPatternHeight = data.yearData.length * PATTERN_HEIGHT + (data.yearData.length - 1) * BORDER_WIDTH
  const totalHeight = totalPatternHeight + (BORDER_WIDTH * 2) // Add top and bottom borders
  const totalWidth = PATTERN_WIDTH + (BORDER_WIDTH * 2) // Add left and right borders
  const totalSquares = data.yearData.length * (PATTERN_WIDTH * PATTERN_HEIGHT)
  const borderSquares = (totalWidth * BORDER_WIDTH * 2) + (totalPatternHeight * BORDER_WIDTH * 2) + ((data.yearData.length - 1) * BORDER_WIDTH * totalWidth)

  const generateInstructions = () => {
    const instructions = `
# ${data.username}'s GitHub Graphghan Pattern

## Materials Needed
- Worsted weight yarn in 5 colors:
  ${Object.entries(YARN_COLORS).map(([_, color]) => `  • ${color.name} (${color.hex}) - ${color.description}`).join('\n')}
- Size H/8 (5.0mm) crochet hook
- Yarn needle for sewing
- Scissors

## Finished Size
Approximately ${Math.round(totalWidth * 3)}" × ${Math.round(totalHeight * 3)}" (including 2-square wide borders)

## Pattern Notes
- This is a corner-to-corner (C2C) crochet pattern
- Each square in the pattern represents one day from ${data.username}'s GitHub activity
- Years are stacked vertically, newest (${data.years[0]}) at top, oldest (${data.years[data.years.length - 1]}) at bottom
- Pattern covers: ${config.years.join(', ')}
- Total commits represented: ${data.totalContributions}
- All borders are 2 squares wide

## Instructions

### Corner-to-Corner Technique
1. Start with a chain of 6
2. DC in 4th chain from hook, DC in next 2 chains
3. Continue building diagonally following the color chart
4. Use the bobbin method for color changes
5. Work the pattern from bottom-left to top-right

### Pattern Structure
${data.yearData.map(year => 
`- ${year.year}: ${PATTERN_WIDTH} × ${PATTERN_HEIGHT} squares (${year.totalContributions} commits)`
).join('\n')}

### Color Guide
- Follow the attached grid pattern
- Each cell = 1 C2C square
- Change colors as indicated in the pattern
- Years are separated by 2-square wide ${config.borderStyle} border sections
- Total pattern size: ${totalWidth} × ${totalHeight} squares (including borders)

### Border (${config.borderStyle === 'light' ? 'Light' : 'Dark'} Style)
All borders are 2 squares wide using ${config.borderStyle === 'light' ? 'Cream' : 'Forest Green'} yarn:
- Top border: 2 squares tall
- Bottom border: 2 squares tall  
- Left border: 2 squares wide
- Right border: 2 squares wide
- Between years: 2 squares tall

### Finishing
1. Weave in all ends securely
2. Block if desired for crisp edges
3. Enjoy your personalized coding blanket!

## Pattern Statistics
- Total squares: ${totalSquares}
- Border squares: ${borderSquares}
- Years stacked: ${data.yearData.length}
- Years included: ${config.years.join(', ')}
- Created from ${data.username}'s GitHub activity

Generated by Commit Graphghan Generator
    `.trim()

    return instructions
  }

  const downloadPattern = () => {
    const instructions = generateInstructions()
    const blob = new Blob([instructions], { type: 'text/plain' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `${data.username}-github-graphghan-${config.years.join('-')}.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  return (
    <div className="space-y-6">
      <Card>
        <div>
          <h2 className="flex items-center gap-2">
            <FileIcon className="h-5 w-5" />
            Pattern Instructions
          </h2>
          <p>
            Complete instructions for creating your GitHub graphghan
          </p>
        </div>
        <div className="space-y-4">
          <div className="grid gap-4 sm:grid-cols-2">
            <div>
              <h4 className="font-medium mb-2">Pattern Details</h4>
              <ul className="text-sm space-y-1 text-muted-foreground">
                <li>Size: {totalWidth} × {totalHeight} squares</li>
                <li>Finished: ~{Math.round(totalWidth * 3)}" × {Math.round(totalHeight * 3)}"</li>
                <li>Years: {config.years.join(', ')} (stacked)</li>
                <li>Total commits: {data.totalContributions}</li>
                <li>Border: {config.borderStyle} style</li>
              </ul>
            </div>
            <div>
              <h4 className="font-medium mb-2">Materials</h4>
              <ul className="text-sm space-y-1 text-muted-foreground">
                <li>Worsted weight yarn (5 colors)</li>
                <li>Size H/8 (5.0mm) hook</li>
                <li>Yarn needle</li>
                <li>Scissors</li>
              </ul>
            </div>
          </div>

          <br />

          <div>
            <h4 className="font-medium mb-3">Yarn Color Guide</h4>
            <div className="grid gap-2">
              {Object.entries(YARN_COLORS).map(([level, color]) => (
                <div key={level} className="flex items-center gap-3 text-sm">
                  <div 
                    className="w-4 h-4 rounded border border-gray-300"
                    style={{ backgroundColor: color.hex }}
                  />
                  <span className="font-medium min-w-[120px]">{color.name}</span>
                  <span className="text-muted-foreground">{color.description}</span>
                </div>
              ))}
            </div>
          </div>

          <br />

          <div>
            <h4 className="font-medium mb-2">Next Steps</h4>
            <ol className="text-sm space-y-1 text-muted-foreground list-decimal list-inside">
              <li>Download the complete pattern instructions</li>
              <li>Gather your materials and yarn colors</li>
              <li>Print the pattern for easy reference while crocheting</li>
              <li>Start from the bottom-left corner and work diagonally</li>
              <li>Follow the color chart square by square</li>
            </ol>
          </div>

          <Button onClick={downloadPattern} className="w-full">
            <DownloadIcon className="h-4 w-4 mr-2" />
            Download Complete Pattern
          </Button>
        </div>
      </Card>
    </div>
  )
}